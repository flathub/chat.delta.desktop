{
 "_id": "esbuild-plugin-inline-worker",
 "_rev": "2-a3a6c4573761fa6da24c17564de2ee5b",
 "name": "esbuild-plugin-inline-worker",
 "dist-tags": {
  "latest": "0.1.1"
 },
 "versions": {
  "0.1.0": {
   "name": "esbuild-plugin-inline-worker",
   "description": "Esbuild loader for inline Web Workers",
   "version": "0.1.0",
   "repository": {
    "type": "git",
    "url": "git+https://github.com/mitschabaude/esbuild-plugin-inline-worker.git"
   },
   "keywords": [
    "workers",
    "esbuild"
   ],
   "author": {
    "name": "Gregor",
    "email": "gregor.mitscha-baude@gmx.at"
   },
   "license": "MIT",
   "type": "module",
   "main": "index.js",
   "exports": {
    ".": {
     "import": "./index.js"
    }
   },
   "browser": "index.js",
   "types": "index.d.ts",
   "dependencies": {
    "esbuild": "latest",
    "find-cache-dir": "^3.3.1"
   },
   "gitHead": "dbf9e440a062a9c4dd166136bbcc132f8d20ea9e",
   "bugs": {
    "url": "https://github.com/mitschabaude/esbuild-plugin-inline-worker/issues"
   },
   "homepage": "https://github.com/mitschabaude/esbuild-plugin-inline-worker#readme",
   "_id": "esbuild-plugin-inline-worker@0.1.0",
   "_nodeVersion": "15.14.0",
   "_npmVersion": "7.7.6",
   "dist": {
    "integrity": "sha512-c7l5NccN8t9LtldtCvJP/3/OEhZ3iOljlSa8A5u2MwJPrsYJBKfwXuEpdLKKvb/tAthYXCSshko0mjk32p4GVA==",
    "shasum": "8e822d5656436acd90eed943062ca7ebd24f82c3",
    "tarball": "http://localhost:3000/esbuild-plugin-inline-worker/-/esbuild-plugin-inline-worker-0.1.0.tgz",
    "fileCount": 5,
    "unpackedSize": 6047,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhCuxyCRA9TVsSAnZWagAA83kQAI48Bdha6jDrg9nhnusU\n14gO2ll+g7Gs7UT9XdvAJ7Yui+klNbuJy2csAR0/js/0B/JrM8BVWYrj5Gte\nBXi6HGUH6Kcj6wKTHuKlFoESlRC3lYKSAdg+wOk9NbEDlMhFz/JzQOkiXttT\npUCpwbwI4L6ywPjJnogM7rH5T7o8wpSaYpS2I0rQ5yiKENWxlq0kx1XQnJu8\np1W1oYQKTv0ijJNCjM5q3xduBMzlisqKdmc2YGp71vibxFk8EiklRhY9tTzT\n40bs/9qGGquuawqRliCgDv/OwngkvmbNtCMRWpZ5irQL6rhzqfDDxHfXHzQ1\nj4sJRfUiXPKRZXmm7Q6C6xYXJrfAHxOMVR1QxfsRMmb8CM1D0bB6hM13Da+4\nwWDEEbe2VLdg2qJIeFS28GxDjUFHgebU9ZKGnN1+gsVFNR94NRpQkMI3ulgr\nuQDg5ycHSfpAz9r4ztK0jaDaRmJ7R0Z8b2E2AHn0P6Py+TPyZjIXtWU5r2fk\nEvOc/Ww0kcCjpVcpRIbIkX9W9YqAC02yVBp7vVtiOUOt9ZSs4NBwXw8ErMxB\nagGkEBQARoN5xY3wBdokEziwSoLEbB3mkd1OheFog27+JZX3ghfUGLe546Nj\n6trOQeybvIU0XbB5RJYNAp69W0k/oFrZkBK/DlbMAgAZSUDKO8ti6xlBho+Y\nHGeZ\r\n=TcFt\r\n-----END PGP SIGNATURE-----\r\n",
    "signatures": [
     {
      "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
      "sig": "MEUCIQDTlhmvZvAPKvMMjLBiLCPY+jeHgh39bH9HGGeMTx06aQIgNTs5MFYc6d7yFXHAkgn+1dD49SyEMIFQ9vPLWXSbKfo="
     }
    ]
   },
   "_npmUser": {
    "name": "mitschabaude",
    "email": "gregor.mitscha-baude@gmx.at"
   },
   "directories": {},
   "maintainers": [
    {
     "name": "mitschabaude",
     "email": "gregor.mitscha-baude@gmx.at"
    }
   ],
   "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/esbuild-plugin-inline-worker_0.1.0_1628105842176_0.34372805276946283"
   },
   "_hasShrinkwrap": false
  },
  "0.1.1": {
   "name": "esbuild-plugin-inline-worker",
   "description": "Esbuild loader for inline Web Workers",
   "version": "0.1.1",
   "repository": {
    "type": "git",
    "url": "git+https://github.com/mitschabaude/esbuild-plugin-inline-worker.git"
   },
   "keywords": [
    "workers",
    "esbuild"
   ],
   "author": {
    "name": "Gregor",
    "email": "gregor.mitscha-baude@gmx.at"
   },
   "license": "MIT",
   "type": "module",
   "main": "index.js",
   "exports": {
    ".": {
     "import": "./index.js"
    }
   },
   "browser": "index.js",
   "types": "index.d.ts",
   "dependencies": {
    "esbuild": "latest",
    "find-cache-dir": "^3.3.1"
   },
   "gitHead": "08f50df3e5036335a8f31226b02d70d54f8e7769",
   "bugs": {
    "url": "https://github.com/mitschabaude/esbuild-plugin-inline-worker/issues"
   },
   "homepage": "https://github.com/mitschabaude/esbuild-plugin-inline-worker#readme",
   "_id": "esbuild-plugin-inline-worker@0.1.1",
   "_nodeVersion": "15.14.0",
   "_npmVersion": "7.7.6",
   "dist": {
    "integrity": "sha512-VmFqsQKxUlbM51C1y5bRiMeyc1x2yTdMXhKB6S//++g9aCBg8TfGsbKxl5ZDkCGquqLY+RmEk93TBNd0i35dPA==",
    "shasum": "f21a610ad7410972a408272e0d254654381eac58",
    "tarball": "http://localhost:3000/esbuild-plugin-inline-worker/-/esbuild-plugin-inline-worker-0.1.1.tgz",
    "fileCount": 5,
    "unpackedSize": 6143,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhC6MZCRA9TVsSAnZWagAA0TgP/iB02Hy+G/LnWIlv+NK8\nAnDvU1To5OG+UIZ5E3Efvr647g5rF2Rhp3LAjQXpH2NJ1O5QeK7EGRjkkFFU\ncYEp38vjgiR44ukkEYyGmczAfuEGA0WPErahGfHyx4J51rncw7VJVaasU0Bl\n4FCL2ZsCWp4p0S1lOhiHLjVTgj6mPM6LSh7BSuCeumDLF1KE4ftwyWw5C7KE\nUySd1tXi48Cel9kb4WbQflHga71f58yW5sbfZNrFXs8IZipd6/386XQMt/Mx\nrIJQRKSwU3piBHy5fxeM7wueIcS7T8TTsEwDYpyb++zlDnFeufAo77qeBPyV\nvyC2SDdy51cYwWdTX/leIH9G6tCyTMNIwQOcs4EgrCkPOTp5E0Lc697z86hF\nCRtDPJLxSYhHw+OwCtkR9KEsCRn/WW+cadvmn/DRWgLN/AFO96mmjiB+qHYv\nJCor3JXOj1iFvtkh07FoNlkH3QDir8ZsdVWYu32YUtTgjBV/uGjEGQUX0n9p\nylwRU87KhCCGhu0aMGoENVPbgwU7DwAM95XGByRmfsc9nj/jNPsZHgTKPthS\ncU+mNRcrVPV9wLij5pDuQs9K4iq943kSrv23PTsXE2mBAQdvUvu0PrjMz+XF\nn6duvUP9BmwZMTl1USikCSDkdo31a3thwcshQnaHLKnc3udE1CnUxfRBtdV3\nYYDA\r\n=16Nm\r\n-----END PGP SIGNATURE-----\r\n",
    "signatures": [
     {
      "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
      "sig": "MEUCIQC+q4Mw1q7BRKyjDTiYaFHKT15i3QLV0gI/xcfRLDnQSAIgFsDIJRbe43Uivhx52qZPwz65utEZs68L/PbKxY+0zGE="
     }
    ]
   },
   "_npmUser": {
    "name": "mitschabaude",
    "email": "gregor.mitscha-baude@gmx.at"
   },
   "directories": {},
   "maintainers": [
    {
     "name": "mitschabaude",
     "email": "gregor.mitscha-baude@gmx.at"
    }
   ],
   "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/esbuild-plugin-inline-worker_0.1.1_1628152601801_0.9480598231177664"
   },
   "_hasShrinkwrap": false
  }
 },
 "time": {
  "created": "2021-08-04T19:37:22.176Z",
  "0.1.0": "2021-08-04T19:37:22.590Z",
  "modified": "2022-05-01T11:52:02.574Z",
  "0.1.1": "2021-08-05T08:36:41.935Z"
 },
 "maintainers": [
  {
   "name": "mitschabaude",
   "email": "gregor.mitscha-baude@gmx.at"
  }
 ],
 "description": "Esbuild loader for inline Web Workers",
 "homepage": "https://github.com/mitschabaude/esbuild-plugin-inline-worker#readme",
 "keywords": [
  "workers",
  "esbuild"
 ],
 "repository": {
  "type": "git",
  "url": "git+https://github.com/mitschabaude/esbuild-plugin-inline-worker.git"
 },
 "author": {
  "name": "Gregor",
  "email": "gregor.mitscha-baude@gmx.at"
 },
 "bugs": {
  "url": "https://github.com/mitschabaude/esbuild-plugin-inline-worker/issues"
 },
 "license": "MIT",
 "readme": "# esbuild-plugin-inline-worker\n\nThis is a plugin for [esbuild](https://esbuild.github.io) which allows you to import `.worker.js` files to get the constructor for a Web Worker, similar to [worker-loader](https://github.com/webpack-contrib/worker-loader) for Webpack.\n\n```sh\nyarn add esbuild-plugin-inline-worker\n```\n\nExample:\n\n```js\n// example.worker.js\npostMessage('hello from worker!');\n```\n\n```js\n// example.js\nimport Worker from './example.worker.js';\nlet worker = Worker();\nworker.onmessage = ({data}) => console.log(data);\n```\n\nIn this example, `worker` will be an instance of [Worker](https://developer.mozilla.org/en-US/docs/Web/API/Worker).\n\nConveniently, you don't have to take care of having the worker's JavaScript file in the right location on your server. Instead, the JS code for the worker is inlined to the bundle produced by esbuild. This makes this plugin perfect for JS library authors who want to use workers for performance optimization, where the need for a separate worker file is awkward.\n\nThe inlined worker code will be created with a separate call to esbuild. That means your worker code can import libraries and use TypeScript or JSX!\nSupported file extensions for the worker are `.worker.js`, `.worker.ts`, `.worker.jsx`, `.worker.tsx`.\n\n## Usage\n\n```js\nimport {build} from 'esbuild';\nimport inlineWorkerPlugin from 'esbuild-plugin-inline-worker';\n\nbuild({\n  /* ... */\n  plugins: [inlineWorkerPlugin()],\n});\n```\n\n## Build configuration\n\nOptionally, you can pass a configuration object which has the same interface as esbuild's [build API](https://esbuild.github.io/api/#build-api), which determines how the worker code is bundled:\n\n```js\ninlineWorkerPlugin(extraConfig);\n```\n\nThis is how your custom config is used internally:\n\n```js\nif (extraConfig) {\n  delete extraConfig.entryPoints;\n  delete extraConfig.outfile;\n  delete extraConfig.outdir;\n}\n\nawait esbuild.build({\n  entryPoints: [workerPath],\n  bundle: true,\n  minify: true,\n  outfile: bundlePath,\n  target: 'es2017',\n  format: 'esm',\n  ...extraConfig, // <-- your config can override almost everything\n});\n```\n",
 "readmeFilename": "README.md"
}