app-id: chat.delta.desktop
base: org.electronjs.Electron2.BaseApp
base-version: '23.08'
runtime: org.freedesktop.Platform
runtime-version: '23.08'
sdk: org.freedesktop.Sdk
sdk-extensions:
  - org.freedesktop.Sdk.Extension.node20
  - org.freedesktop.Sdk.Extension.rust-stable
command: /app/bin/run.sh
finish-args:
  - --socket=fallback-x11
  - --socket=wayland
  - --share=ipc
  - --device=all         # Webcam access for QR code scans and DRI for OpenGL
  - --socket=pulseaudio  # Record and play voice messages
  - --filesystem=xdg-documents
  - --filesystem=xdg-download
  - --filesystem=xdg-music
  - --filesystem=xdg-pictures
  - --filesystem=xdg-videos
  - --share=network
  - --talk-name=org.freedesktop.Notifications # needed for dbus notification, as the notification portal crashed because of a bug in electron https://github.com/electron/electron/issues/40461
  - --talk-name=com.canonical.AppMenu.Registrar # fix https://github.com/flathub/chat.delta.desktop/issues/118
  - --env=ELECTRON_OZONE_PLATFORM_HINT=auto # tell electron to choose Wayland if it is available
  - --env=NOTIFY_IGNORE_PORTAL=1 # fix https://github.com/deltachat/deltachat-desktop/issues/3590

cleanup:
    # Desktop___________________
    - /delta/resources/app/node_modules/napi-macros
    # frontend node_modules not needed at runtime - would get easier if dc-desktop would adopt the 2 package.json project structure
    # every react addon
    - /delta/resources/app/node_modules/react-*
    - /delta/resources/app/node_modules/classnames
    - /delta/resources/app/node_modules/use-debounce
    - /delta/resources/app/node_modules/create-react-context
    # need testing?
    - /delta/resources/app/node_modules/resize-observer-polyfill
    # momentjs is currently only used by renderer process
    - /delta/resources/app/node_modules/moment


modules:
  - name: deltachat-core-rust
    buildsystem: simple

    build-options:
      env:
        # Tell caches where we pre-downloaded things.
        npm_config_cache: /run/build/deltachat-core-rust/flatpak-node/npm-cache/

        # It does not work to dereference the variable here :-/
        # CARGO_HOME: $FLATPAK_BUILDER_BUILDDIR/cargo
        CARGO_HOME: /run/build/deltachat-core-rust/cargo

        # The intention is to have a release build with debugging symbols.
        # The flatpak build process should separate the debug symbols.
        RUSTFLAGS: "-g"

        # sccache hopefully speeds up subsequent compilations
        RUSTC_WRAPPER: /app/bin/sccache
        SCCACHE_DIR: /run/ccache/sccache/

      append-path: /usr/lib/sdk/rust-stable/bin:/usr/lib/sdk/node20/bin

    build-commands:
      - node --version
      - python3 --version
      - npm cache verify
      - cd /run/build/deltachat-core-rust/deltachat-jsonrpc/typescript && env DEBUG="*" npm install --offline --verbose && npm run build
      - python3 deltachat-rpc-server/npm-package/scripts/make_local_dev_version.py
      - mkdir -p /app/dc-core/deltachat-jsonrpc
      - sed -i 's|/run/build/deltachat-core-rust|/app/dc-core/deltachat-rpc-server|g' deltachat-rpc-server/npm-package/package.json
      - cp -r deltachat-jsonrpc /app/dc-core/deltachat-jsonrpc
      - cp -r deltachat-rpc-server /app/dc-core/deltachat-rpc-server

    modules:
      # setup caching
      - name: sccache
        buildsystem: simple
        build-commands:
          - install -Dma+rwx sccache /app/bin/sccache
        cleanup:
          - /bin/sccache
        sources:
          - type: archive
            url: https://github.com/mozilla/sccache/releases/download/v0.2.15/sccache-v0.2.15-x86_64-unknown-linux-musl.tar.gz
            sha256: e5d03a9aa3b9fac7e490391bbe22d4f42c840d31ef9eaf127a03101930cbb7ca
            only-arches: ["x86_64"]

          - type: archive
            url: https://github.com/mozilla/sccache/releases/download/v0.2.15/sccache-v0.2.15-aarch64-unknown-linux-musl.tar.gz
            sha256: 90d91d21a767e3f558196dbd52395f6475c08de5c4951a4c8049575fa6894489
            only-arches: ["aarch64"]
      
    sources:
      # - type: archive
      #   url: https://github.com/deltachat/deltachat-core-rust/archive/1.91.0.tar.gz
      #   sha256: 2909661e9e4bab24b482e9c2b2d983a777fa5e6173484ab99571115d5aaa70aa
      - type: git
        url: https://github.com/deltachat/deltachat-core-rust.git
        tag: v1.142.7
        commit: 8538a3c148eb7d7052763fe7fb38bb8be2e6035e
      - generated/sources-rust.json
      - generated/sources-jsonrpc-client-npm.json

      - type: file
        path: generated/deltachat-jsonrpc.typescript.package-lock.json
        dest: deltachat-jsonrpc/typescript/
        dest-filename: package-lock.json

  - name: delta
    buildsystem: simple
    build-options:
      append-path: /usr/lib/sdk/node20/bin
      env:      
        NPM_CONFIG_LOGLEVEL: info

        # Tell caches where we pre-downloaded things.
        npm_config_cache: /run/build/delta/flatpak-node/npm-cache/

        # for node gyp:
        npm_config_nodedir: /run/build/delta/node-headers

        XDG_CACHE_HOME: /run/build/delta/flatpak-node/cache
        TMPDIR: /run/build/delta/flatpak-node/tmp

        # This overwrites the git-ref version info for the about- and crash-screen
        VERSION_INFO_GIT_REF: "flathub"
        NO_ASAR: "true"

    build-commands:
      - ls -lah /run/build/
      - mkdir -p $TMPDIR
      - node --version
      - npm --version
      - python --version
      - npm cache verify
      # https://github.com/flatpak/flatpak-builder-tools/blob/db24c70456b7122f4243ab4a21dbb3368334e259/node/README.md#chromedriver-support
      - env DEBUG="*" npm install --offline --verbose
      # install the core we build locally instead of the prebuild
      - env DEBUG="*" npm install --install-links=true --offline --verbose /app/dc-core/deltachat-rpc-server/npm-package
      - rm -r /app/dc-core
      - npm run build4production --offline --verbose
      - npm run pack:generate_config --offline --verbose
      - |
        ln -srv $XDG_CACHE_HOME/node-gyp $HOME/.electron-gyp
        npm run pack:linux:dir --offline --verbose
      - mkdir -p /app/delta
      # The x86-64 build seems to be put in "linux-unpacked",
      # the aarch64 build in "linix-arm64-unpacked"
      # we try to catch both paths with the wildcard
      - cp -ar dist/linux*unpacked/* /app/delta/

      # Install the required static files
      - install ../run.sh $FLATPAK_DEST/run.sh
      - install -Dm 0644 ../chat.delta.desktop.desktop  /app/share/applications/chat.delta.desktop.desktop
      - install -Dm 0644 ../mime/deltachat-desktop.xml  /app/share/mime/packages/chat.delta.desktop.xml
      - install -Dm 0644 ../chat.delta.desktop.appdata.xml  /app/share/metainfo/chat.delta.desktop.appdata.xml
      - install -Dm 0644 ../delta-v7-pathed.svg /app/share/icons/hicolor/scalable/apps/chat.delta.desktop.svg
    subdir: main
    sources:
      # Electron
      # the binaries are already included in generated-sources-npm.0.json

      # Delta Chat
      - type: git
        url: https://github.com/deltachat/deltachat-desktop.git
        tag: v1.46.4
        commit: 72b1ea26bceb05f7c719acdd34ac69f5779fd96a
        dest: main

      - type: file
        url: https://raw.githubusercontent.com/deltachat/interface/970c5df39866695b5e8ebdd73caa68cbb6de5242/icons/delta-v7-pathed.svg
        sha256: 1787a9dfdd80301ae5dbe48105bd58215c6552bd8ecfa4efd15fe6d31ba31274
        dest-filename: delta-v7-pathed.svg

      - type: file
        path: chat.delta.desktop.desktop

      - type: file
        path: chat.delta.desktop.256.png
        dest-filename: chat.delta.desktop.png

      - type: archive
        url: https://nodejs.org/download/release/v18.18.1/node-v18.18.1-headers.tar.gz
        sha256: 7e96d38cca734754e711af9bc43b6b5f2f279951849c1089bdc8825312fd7ddb
        dest: node-headers

      - type: script
        dest-filename: run.sh
        commands:
          - export TMPDIR="$XDG_RUNTIME_DIR/app/$FLATPAK_ID"
          - exec zypak-wrapper /app/delta/deltachat-desktop "$@" --disable-features=WaylandFractionalScaleV1


      # All the generated npm downloads, see README.md how to create
      # this file.  This needs to go to the bottom so that the
      # commands in that file can see package.json and friends.
      - generated/sources-npm.json


      # https://github.com/deltachat/deltachat-desktop/pull/1125
      - type: file
        path: chat.delta.desktop.appdata.xml

      - type: file
        path: mime/deltachat-desktop.xml
        dest: mime

