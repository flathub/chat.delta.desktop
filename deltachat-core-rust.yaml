name: deltachat-core-rust
buildsystem: simple
build-options:
  env:
    # It does not work to dereference the variable here :-/
    # CARGO_HOME: $FLATPAK_BUILDER_BUILDDIR/cargo
    CARGO_HOME: /run/build/deltachat-core-rust/cargo

    # deltachat-ffi/build.rs uses this to create deltachat.pc,
    # should locate deltachat.so.
    PREFIX: /app/lib

    # The intention is to have a release build with debugging symbols.
    # The flatpak build process should separate the debug symbols.
    RUSTFLAGS: "-g"

    # sccache hopefully speeds up subsequent compilations
    RUSTC_WRAPPER: /app/bin/sccache
    SCCACHE_DIR: /run/ccache/sccache/

  append-path: /app/lib/sdk/rust-nightly/bin

cleanup:
    - /include
    - /lib/libdeltachat.a
build-commands:
  - type -a rustc
  - type -a cargo
  - rustc --version
  # If "fetch" doesn't work while being offline, then the build is unlikely to work either.
  - cargo --offline -Z unstable-options fetch --manifest-path deltachat-ffi/Cargo.toml  --verbose --verbose
  # Vendorising doesn't seem to work offline, even though fetch and building work. So don't attempt to re-vendor.
  # - cargo --offline -Z unstable-options vendor --manifest-path deltachat-ffi/Cargo.toml  --verbose
  - cargo --offline -Z unstable-options build -p deltachat_ffi --release --out-dir $PREFIX --verbose
  - install -D -m a+r deltachat-ffi/deltachat.h  /app/include/deltachat-ffi/deltachat.h
  - install -D -m a+r ./target/release/pkgconfig/deltachat.pc  /app/lib/pkgconfig/deltachat.pc
  - find /app -name '*delta*.so'
  - pkg-config --libs deltachat
modules:
  - name: rust-nightly
    cleanup:
      # We don't need rust in the final application, only build-time
      - /lib/sdk/rust-nightly
    buildsystem: simple
    build-commands:
      - ./install.sh --prefix=/app/lib/sdk/rust-nightly --disable-ldconfig --verbose
    sources:
      - type: archive
        only-arches: ["x86_64"]
        url: https://static.rust-lang.org/dist/2020-08-03/rust-nightly-x86_64-unknown-linux-gnu.tar.gz
        sha256: df4cbd0eb18334723aeb0dee9e3800465f3af7eaac4a7a39a7ec1ad3eb0b08e0

      - type: archive
        only-arches: ["aarch64"]
        url: https://static.rust-lang.org/dist/2020-08-03/rust-nightly-aarch64-unknown-linux-gnu.tar.gz
        sha256: aa93f75fcab54287cb0922002b1beb3ab6f43d95b1f944e58659d0307df3c7ee

  - name: sccache
    buildsystem: simple
    build-commands:
        - install -Dma+rwx sccache /app/bin/sccache
    sources:
        - type: archive
          url: https://github.com/mozilla/sccache/releases/download/v0.2.15/sccache-v0.2.15-x86_64-unknown-linux-musl.tar.gz
          sha256: e5d03a9aa3b9fac7e490391bbe22d4f42c840d31ef9eaf127a03101930cbb7ca

sources:
  - type: archive
    url: https://github.com/deltachat/deltachat-core-rust/archive/1.50.0.tar.gz
    sha256: 8b7101f9a9af82e23985f468e56b5776ca78c58b55f542fcac198df7cdac3a52
  - generated-sources-rust.json

